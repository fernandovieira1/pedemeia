######################### ***CONFIGURAÇÃO INICIAL*** #########################
#### LEIA-ME ####
# - Preencher as opções (SEÇÃO II, logo abaixo) para rodar o script
# - Não mexer nas outras seções

# - Selecionar o código completo em cada script (ctrl + a) e rodar (ctrl + enter):
#    - 1) 10_zoo3.R: dados zootécnicos
#    - 2) 11_eco3.R: dados econômicos
#    - 3) 12_amb3.R: dados ambientais
#    - 4) 13_fia3.R: resultado final, conforme planilha modelo ('Teste Nicolela.xlsx')

#### SEÇÃO I. SETAR AMBIENTE ####

rm(list=ls(all=TRUE)); gc(); # não mexer aqui
cat('\014') # não mexer aqui
# MUDAR aqui
setwd('C:\\Users\\ferna\\OneDrive\\5. Trabalho\\1. Expediente\\1. Ativos\\a. Economia\\CONSULTORIAS\\Projeto CPQD\\Analise Dados Confinamento\\Dados Beeftrader Rubens')

Sys.setlocale('LC_ALL', 'pt_BR.UTF-8')
options(Date = '%d-%m-%Y')

library(tidyverse)
library(openxlsx)
library(gridExtra)
library(knitr)
library(gt)
library(plotly)
library(ggridges)
library(scales)
library(png)
library(grid)
library(webshot)
library(cowplot)

#### SEÇÃO II. DEFINIR QUAL ANALISE SERÁ FEITA ####
## Datasets atuis no Sistema BeefTrader
# - 'joao_conte' (OPÇÃO 1) - Análise do dataset 'Joao Conte'
# - 'doze_2023' (OPÇÃO 2) - Análise do dataset '12 2023'

### MEXER AQUI ####
# Responder as 3 perguntas abaixo:
## --- ##

## PERGUNTA 1: Qual dataset será analisado?
escolhido <- 1 # 1 (joao_conte) ou 2 (doze_2023)

## PERGUNTA 2: Visualizar resultado final da análise?
# Com o comando: View(fia3)
visual_result_final <- FALSE # TRUE ou FALSE

## PERGUNTA 3: Exportar o resultado para o Excel?
export_result_final_excel <- FALSE # TRUE ou FALSE

## PERGUNTA 4: Qual a fonte de emissão de CO2/Bovino?
fonte_co2 <- 2 # 1 (Embrapa: 1,34) ou 2 (Prof. Nicolella - Mínimo: 2.1) ou 3 (Prof. Nicolella - Máximo: 3.6)

emissao_co2 <- ifelse(fonte_co2 == 1, emissao_co2 <- 1.34, 
                      ifelse(fonte_co2 == 2, emissao_co2 <- 2.1,
                             emissao_co2 <- 3.6))
## --- ##
# A partir daqui, não mexer
analise <- ifelse(escolhido == 1, 'joao_conte', 'doze_2023') # Não mexer

# (=) Selecionar ctr + a e ctr + enter para rodar o script (=)

######################### ***PARTE 1: DADOS ZOOTÉCNICOS*** #########################
################################ 1. Dataset zoo3 ################################ 

#### 1.1 Importar Dados ####
joao_conte <- 'bds\\Joao Conte A1\\Relatorio Zoo 3 Venda Joao Conte.csv'
doze_2023 <- 'bds\\12_2023\\Relatorio Zoo 3 Venda 12_2023.csv'

bd_analisado <- get(analise)

# Criar o df
zoo3 <- read.csv(bd_analisado, sep = ',')
names(zoo3)

#### 1.2 Renomear Colunas ####
names(zoo3) <- c(
  'brinco', 'tag', 
  'sisbov', 'venda', 
  'data_venda', 'raca', 
  'genero', 'peso_inicial_kg',
  'peso_atual_kg', 'gmd_atual_kg_dia', 
  'conv_alim_atual_kg_ims_dia', 'consumo_atual_kg_ms_dia', 
  'egs_atual', 'categ_egs_atual', 
  'gmd_kg_dia', 'conv_alim_kg_ms_dia', 
  'consumo_kg_ms_dia', 'peso_final_kg', 
  'egs', 'categ_egs'
)

#### 1.3 Transformar Colunas ####

# Dados categóricos em factor
zoo3[, c('brinco', 'tag', 'sisbov', 'genero')] <- zoo3 %>% 
  select(brinco, tag, sisbov, genero) %>% mutate(across(everything(), as.factor))

# Datas
str(zoo3$data_venda)

zoo3 <- zoo3 %>%
  mutate(
    # Corrigir o ano '24' para '2024'
    data_venda = if_else(
      grepl('/24$', data_venda), # Detecta anos no formato '24'
      gsub('/24$', '/2024', data_venda), # Substitui por '2024'
      data_venda
    ),
    # Converter para tipo Date
    data_venda = as.Date(data_venda, format = '%d/%m/%Y')
  )

## Remover colunas inconsistentes
# No caso do zoo3, colunas só com NAs, 0s, 1s, apenas um gênero (todos são machos)
zoo3 <- zoo3 %>% 
  select(-egs_atual, -categ_egs_atual, -egs, -categ_egs, -genero, -tag)

## Remover espaços
zoo3 <- zoo3 %>%
  mutate(raca = str_trim(raca, side = 'both'))

## Deixar em ordem crescente por brinco
zoo3 <- zoo3 %>% 
  arrange(brinco, .by_group = TRUE)

## Deixar os nomes das colunas em ordem alfabética
# Exceto as colunas brinco, sisbov, venda, data_venda e raca
zoo3 <- zoo3[, c(
  c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'),
  sort(setdiff(names(zoo3), c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'))) 
)]

# Verificar a nova estrutura
str(zoo3)

#### 1.4 Visão Geral ####

## Linhas e colunas
str(zoo3)
head(zoo3, 3)
nrow(zoo3)             # 83 linhas
ncol(zoo3)             # 14 colunas/variáveis

## Dados categóricos
unique(zoo3$brinco)    
unique(zoo3$sisbov)    

table(zoo3$raca)       
table(zoo3$data_venda)

## Descritiva
summary(zoo3)

################################ 2. Análise ################################ 
# https://docs.google.com/spreadsheets/d/1nO_WMa0z1WIemLLGwniFkcq8CnYuSRvN/edit?gid=2051201645#gid=2051201645

#### 2.1. Colunas Derivadas ####

### 2.1.1 Ganho de Peso ####
zoo3 <- zoo3 %>% 
  mutate(ganho_peso = peso_final_kg - peso_inicial_kg) 

zoo3 %>% select(ganho_peso) %>% summary()

#### 2.1.2 Tempo até Venda ####
zoo3 <- zoo3 %>% 
  mutate(tempo_venda = if_else(venda == 1, 61, 
                               if_else(venda == 2, 82, 
                                       110)))

#### 2.2 Consumo de Ração, Peso e Venda ####
# A coluna gmd_kg_dia corresponde ao ganho médio diário de peso
# zoo3 %>% 
#   mutate(gmd_kg_dia2 = ganho_peso/tempo_venda) %>% 
#   select(gmd_kg_dia, gmd_kg_dia2) %>% 
#   round(2)

#### 2.2.1 Criar coluna Consumo Sobre o Peso Final ####
zoo3 <- zoo3 %>% 
  mutate(consumo_sobre_peso_final = (consumo_kg_ms_dia*tempo_venda) / peso_final_kg) 

#### 2.2.2 Gráfico: Consumo sobre o Peso Final por Venda ####
ggplot(zoo3, aes(y = peso_final_kg, x = consumo_sobre_peso_final, color = as.factor(venda))) +
  geom_point(size = 3) +
  labs(
    title = 'Consumo sobre Peso Final por Venda',
    y = 'Peso Final (kg)',
    x = 'Consumo por animal (kg) / Tempo até venda (dias)',
    color = 'Venda',
    caption = paste(
      "Fonte: BeefTrader (zoo3)\n",
      "'Dataset': feito com base no banco de dados '", ifelse(
        grepl("Joao Conte", bd_analisado, ignore.case = TRUE), 
        "joao_conte", 
        ifelse(grepl("12_2023", bd_analisado, ignore.case = TRUE), "doze_2023", "desconhecido")
      ), 
      "', contendo ", nrow(zoo3), " observações (animais).", sep = ""
    )
  ) +
  scale_color_brewer(palette = 'Set1') +
  theme_minimal()

######################### ***PARTE 2: DADOS ECONÔMICOS*** #########################
################################ 1. Dataset eco3 ################################ 

#### 1.1 Importar Dados ####
joao_conte <- 'bds\\Joao Conte A1\\Relatorio Eco 3 Venda Joao Conte.csv'
doze_2023 <- 'bds\\12_2023\\Relatorio Eco 3 Venda 12_2023.csv'

bd_analisado <- get(analise)

# Criar o df
eco3 <- read.csv(bd_analisado, sep = ',')
names(eco3)

#### 1.2 Renomear Colunas ####
names(eco3) <- c(
  'brinco', 'tag', 'sisbov', 
  'venda', 'data_venda', 'raca', 
  'genero', 'lucro_diario_atual', 'lucro_total_atual',
  'lucro_atual_arroba', 'custo_atual_arroba', 'receita_atual_arroba',
  'estoque_atual_arroba', 'lucro_diario_reais', 'lucro_total_reais',
  'custo_total_reais', 'receita_total_reais', 'lucro_total_arroba',
  'custo_total_arroba', 'receita_total_arroba', 'estoque_total_arroba'
)

#### 1.3 Transformar Colunas ####

# Dados categóricos em factor
eco3[, c('brinco', 'tag', 'sisbov', 'genero')] <- eco3 %>% 
  select(brinco, tag, sisbov, genero) %>% mutate(across(everything(), as.factor))

# Datas
str(eco3$data_venda)

eco3 <- eco3 %>%
  mutate(
    # Corrigir o ano '24' para '2024'
    data_venda = if_else(
      grepl('/24$', data_venda), # Detecta anos no formato '24'
      gsub('/24$', '/2024', data_venda), # Substitui por '2024'
      data_venda
    ),
    # Converter para tipo Date
    data_venda = as.Date(data_venda, format = '%d/%m/%Y')
  )

## Remover colunas inconsistentes
# No caso do eco3, colunas só com 0s e apenas um gênero (todos são machos)
eco3 <- eco3 %>% 
  select(-estoque_atual_arroba , -receita_total_arroba , -estoque_total_arroba, -genero, -tag)

## Remover espaços
eco3 <- eco3 %>%
  mutate(raca = str_trim(raca, side = 'both'))

## Deixar em ordem crescente por brinco
eco3 <- eco3 %>% 
  arrange(brinco, .by_group = TRUE)

## Deixar os nomes das colunas em ordem alfabética
# Exceto as colunas brinco, sisbov, venda, data_venda e raca
eco3 <- eco3[, c(
  c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'), 
  sort(setdiff(names(eco3), c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'))) 
)]

#### 1.4 Visão Geral ####

## Linhas e colunas
str(eco3)
head(eco3, 3)
nrow(eco3)             # 83 linhas
ncol(eco3)             # 16 colunas/variáveis

## Dados categóricos
unique(eco3$brinco)
unique(eco3$sisbov)

table(eco3$raca)
table(eco3$data_venda)

## Descritiva
summary(eco3)

################################ 2. Análise ################################ 
# https://docs.google.com/spreadsheets/d/1nO_WMa0z1WIemLLGwniFkcq8CnYuSRvN/edit?gid=2051201645#gid=2051201645

#### 2.1. Colunas Derivadas ####

#### 2.1.1 Tempo até Venda ####
zoo3 <- zoo3 %>% 
  mutate(tempo_venda = if_else(venda == 1, 61, 
                               if_else(venda == 2, 82, 
                                       110)))

#### 2.2 Lucro Total e Custo Total ####

#### 2.2.1 Gráfico: Lucro Total e Custo Total por animal (R$) ####
ggplot(eco3, aes(y = lucro_total_reais, x = custo_total_reais, color = as.factor(venda))) +
  geom_point(size = 3) +
  labs(
    title = 'Lucro Total e Custo Total por animal (R$)',
    y = 'Lucro Total (kg)',
    x = 'Custo Total (kg)',
    color = 'Venda',
    caption = paste(
      "Fonte: BeefTrader (eco3)\n",
      "'Dataset': feito com base no banco de dados '", ifelse(
        grepl("Joao Conte", bd_analisado, ignore.case = TRUE), 
        "joao_conte", 
        ifelse(grepl("12_2023", bd_analisado, ignore.case = TRUE), "doze_2023", "desconhecido")
      ), 
      "', contendo ", nrow(zoo3), " observações (animais).", sep = ""
    )
  ) +
  scale_color_brewer(palette = 'Set2') +
  theme_minimal()

######################### ***PARTE 3: DADOS AMBIENTAIS*** #########################
################################ 1. Dataset amb3 ################################ 

#### 1.1 Importar Dados ####
joao_conte <- 'bds\\Joao Conte A1\\Relatorio Amb 3 Venda Joao Conte.csv'
doze_2023 <- 'bds\\12_2023\\Relatorio Amb 3 Venda 12_2023.csv'

bd_analisado <- get(analise)

# Criar o df
amb3 <- read.csv(bd_analisado, sep = ',')
names(amb3)

#### 1.2 Renomear Colunas ####
names(amb3) <- c(
  'brinco', 'tag', 'sisbov', 'venda', 
  'data_venda', 'raca', 'genero', 'agua_atual_lt', 
  'co2_atual_kg_co2_dia', 'dejetos_atual_kg_mn_dia', 'efic_amb_atual_kg_co2_eq_arroba', 
  'agua_lt_arroba', 'co2_kg_dia', 'dejetos_kg_mn_dia', 'efic_amb_kg_co2_eq_arroba'
)

#### 1.3 Transformar Colunas ####

# Dados categóricos em factor
amb3[, c('brinco', 'tag', 'sisbov', 'genero')] <- amb3 %>% 
  select(brinco, tag, sisbov, genero) %>% mutate(across(everything(), as.factor))

# Datas
str(amb3$data_venda)

amb3 <- amb3 %>%
  mutate(
    # Corrigir o ano '24' para '2024'
    data_venda = if_else(
      grepl('/24$', data_venda), # Detecta anos no formato '24'
      gsub('/24$', '/2024', data_venda), # Substitui por '2024'
      data_venda
    ),
    # Converter para tipo Date
    data_venda = as.Date(data_venda, format = '%d/%m/%Y')
  )

## Remover colunas inconsistentes
# No caso do amb3, colunas com apenas um gênero (todos são machos)
amb3 <- amb3 %>% 
  select(-genero, -tag)

## Remover espaços
amb3 <- amb3 %>%
  mutate(raca = str_trim(raca, side = 'both'))

## Deixar em ordem crescente por brinco
amb3 <- amb3 %>% 
  arrange(brinco, .by_group = TRUE)

## Deixar os nomes das colunas em ordem alfabética
# Exceto as colunas brinco, sisbov, venda, data_venda e raca
amb3 <- amb3[, c(
  c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'), 
  sort(setdiff(names(amb3), c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'))) 
)]

#### 1.4 Visão Geral ####

## Linhas e colunas
str(amb3)
head(amb3, 3)
nrow(amb3)
ncol(amb3)

## Dados categóricos
unique(amb3$brinco)
unique(amb3$sisbov)

table(amb3$raca)       # 2 raças (82 Cruzados, 1 Nelore)
table(amb3$data_venda)

## Descritiva
summary(amb3)

################################ 2. Análise ################################ 
# https://docs.google.com/spreadsheets/d/1nO_WMa0z1WIemLLGwniFkcq8CnYuSRvN/edit?gid=2051201645#gid=2051201645

#### 2.1. Colunas Derivadas ####

#### 2.1.1 Tempo até venda ####
amb3 <- amb3 %>% 
  mutate(tempo_venda = if_else(venda == 1, 61, 
                               if_else(venda == 2, 82, 
                                       110)))

######################### ***PARTE 4: ANÁLISE FIA*** #########################
################################ 1. Dataset fia3 ################################
### Junção dos dfs zoo3, eco3 e amb3

### 1.1 Igualdade das colunas e linhas
## Listar dfs
names(zoo3)
names(eco3)
names(amb3)

## Quais colunas são iguais?
names(zoo3) %>%
  intersect(names(eco3)) %>%
  intersect(names(amb3)) 
# Colunas iguais nos três dfs: brinco, sisbov, venda, data_venda e raca

## Possuem as mesmas info (linhas)?
names(zoo3) %>%
  intersect(names(eco3)) %>%
  intersect(names(amb3)) %>%
  map(~ {
    # Alinhar pelas chaves comuns (brinco, sisbov, etc.)
    alinhado <- reduce(list(zoo3, eco3, amb3), ~ merge(.x, .y, by = c('brinco', 'sisbov', 'venda', 'data_venda', 'raca'), all = FALSE))
    
    # Comparar apenas as colunas alinhadas
    all(as.character(alinhado[[paste0(.x, '.x')]]) == as.character(alinhado[[paste0(.x, '.y')]]) & 
          as.character(alinhado[[paste0(.x, '.x')]]) == as.character(alinhado[[paste0(.x, '.z')]]))
  }) %>%
  set_names(
    names(zoo3) %>% 
      intersect(names(eco3)) %>% 
      intersect(names(amb3))
  )
# Todas as colunas iguais nos três dfs tem as mesmas linhas

#### 1.2 Criar df  ####
## Com base no df zoo3
fia3 <- zoo3 %>%
  select(brinco, venda, data_venda, 
         peso_inicial_kg, peso_atual_kg, gmd_atual_kg_dia,
         conv_alim_atual_kg_ims_dia , consumo_atual_kg_ms_dia, gmd_kg_dia,
         conv_alim_kg_ms_dia, consumo_kg_ms_dia, peso_final_kg,
         tempo_venda
  )

#### 1.3 Criar Colunas ####
## Peso de venda sugerido
fia3 <- fia3 %>% mutate(
  peso_venda_sug = peso_inicial_kg + (gmd_kg_dia * tempo_venda))

## Quantidade MS Consumida até Venda Sugerida
fia3 <- fia3 %>% mutate(
  ms_consumida_venda_sug = consumo_kg_ms_dia * tempo_venda)

## MS/kg de carne Produzida na Venda sugerida
fia3 <- fia3 %>% mutate(
  ms_kg_carne_venda_sug = ms_consumida_venda_sug / peso_venda_sug)

## Peso sem Descasque
fia3 <- fia3 %>% mutate(
  peso_sem_descasque = peso_inicial_kg + (gmd_atual_kg_dia * fia3$tempo_venda[fia3$venda == 3][1]))

## Consumo Sem descasque
fia3 <- fia3 %>% 
  mutate(
    consumo_sem_descasque = (consumo_kg_ms_dia * tempo_venda) + # consumo_kg_ms_dia: média final
      (consumo_atual_kg_ms_dia * ifelse( # consumo_atual_kg_ms_dia: média atual, muda todos os dias, mas a a @Tech não disponibilizou os dados
        venda != 3 & any(venda == 3),
        tempo_venda[venda == 3][1] - tempo_venda, 
        1
      ))
  )

## MS/kg carne produzida
fia3 <- fia3 %>% mutate(
  ms_kg_carne = consumo_sem_descasque / peso_sem_descasque)

## Dias economizados
fia3 <- fia3 %>% mutate(
  dias_economizados = fia3$tempo_venda[fia3$venda == 3][1] - tempo_venda)

#### 1.4 Estatísticas Base ####
# Servem de referência para criar a tabela/df fia3
names(fia3)

## 1.4.1 Peso da Carne ####
media_ms_kg_carne <- sum(fia3$ms_consumida_venda_sug) / sum(fia3$peso_venda_sug) # Resultado diferente da planilha
media_ms_kg_carne_sem_descasque <- sum(fia3$consumo_sem_descasque) / sum(fia3$peso_sem_descasque)

economia_ms_ton_carne <- (media_ms_kg_carne_sem_descasque-media_ms_kg_carne)*1000

## 1.4.2 Venda da Carne ####
media_venda_sug <- mean(fia3$peso_venda_sug)
media_peso_sem_descasque <- mean(fia3$peso_sem_descasque)

soma_venda_sug <- sum(fia3$peso_venda_sug)
soma_peso_sem_descasque <- sum(fia3$peso_sem_descasque)

#### 1.5 Indicadores Técnicos Avaliados ####
# Seção 2.1 do Relatório FIA
# fia4 <- fia3

## 1.5.1 Consumo de MS com e sem Descasque ####
fia3 <- fia3 %>% 
  mutate(
    # Este é o usado em fia3, conforme tabela Prof. Nicolela
    # COMP: Complicado
    consumo_SEM_descasque_COMP = (consumo_kg_ms_dia * tempo_venda) + # consumo_kg_ms_dia: média final
      (consumo_atual_kg_ms_dia * ifelse( # consumo_atual_kg_ms_dia: média atual, muda todos os dias, mas a a @Tech não disponibilizou os dados
        venda != 3 & any(venda == 3),
        tempo_venda[venda == 3][1] - tempo_venda, 
        1)),
    # SIMP: Simples
    consumo_SEM_descasque_SIMP = consumo_kg_ms_dia * fia3$tempo_venda[fia3$venda == 3][1],
    # COM: Seria só isso mesmo???
    consumo_COM_descasque = consumo_kg_ms_dia * tempo_venda
  )

fia3 %>% select(consumo_sem_descasque, 
                consumo_SEM_descasque_COMP, 
                consumo_SEM_descasque_SIMP, 
                consumo_COM_descasque) %>% head()

## 1.5.2 Consumo de MS por kg de Carne Produzida com e sem Descasque ####
# ms_consumida_venda_sug = consumo_kg_ms_dia * tempo_venda)

print('Consumo de MS por kg de Carne sem Descasque')
fia3$consumo_sem_descasque / fia3$peso_final_kg

print('Consumo de MS por kg de Carne SEM Descasque COMP')
fia3$consumo_SEM_descasque_COMP / fia3$peso_final_kg

print('Consumo de MS por kg de Carne SEM Descasque SIMP')
fia3$consumo_SEM_descasque_SIMP / fia3$peso_final_kg

print('Consumo de MS por kg de Carne COM Descasque')
fia3$consumo_COM_descasque / fia3$peso_final_kg

## 1.5.3 Peso final com e sem descasque ####
print('Peso final com descasque')
fia3$peso_final_kg

print('Peso final sem descasque')
fia3$peso_sem_descasque

## 1.5.4 Consumo com e sem descasque por tipo de venda ####
# 1
paste("Escolhido:", ifelse(escolhido == 1, "`Joao Conte`", "`12 2023`"))
fia3 %>% group_by(venda==1) %>% 
  summarise(media_ms_sem_descasque = mean(consumo_sem_descasque),
            media_ms_com_descasque = mean(consumo_COM_descasque)) %>% 
  select(media_ms_sem_descasque, media_ms_com_descasque) %>% 
  summary()

# 2
paste("Escolhido:", ifelse(escolhido == 1, "`Joao Conte`", "`12 2023`"))
fia3 %>% group_by(venda==2) %>% 
  summarise(media_ms_sem_descasque = mean(consumo_sem_descasque),
            media_ms_com_descasque = mean(consumo_COM_descasque)) %>% 
  select(media_ms_sem_descasque, media_ms_com_descasque) %>% 
  summary()

# 3
paste("Escolhido:", ifelse(escolhido == 1, "`Joao Conte`", "`12 2023`"))
fia3 %>% group_by(venda==3) %>% 
  summarise(media_ms_sem_descasque = mean(consumo_sem_descasque),
            media_ms_com_descasque = mean(consumo_COM_descasque)) %>% 
  select(media_ms_sem_descasque, media_ms_com_descasque) %>% 
  summary()

## 1.5.5 Custo por arroba ####
# (ver com Bonacim) - alimentação e hotelaria

#### 1.6 Indicadores Técnicos Sugeridos ####
# Seção 2.1 do Relatório FIA

## 1.6.1 Emissão de Co2 ####
# Um boi emite de 2,1 (Prof. Nicolella - Mínimo) a 3,6 (Prof. Nicolella - Máximo) ton CO2 eq ano 
# Um boi emite 1,34 ton CO2 eq ano (CO2 bovino Embrapa)
emissao_co2_eq <- emissao_co2
total_emissao_co2_eq <- emissao_co2_eq / 365 # Razão entre fonte_co2 (1,34 a 3,6) e 365 dias

## 1.6.2 Total Animal de CO2 eq final ####
fia3 <- fia3 %>%
  mutate(total_econ_co2_final = 
           tempo_venda[fia3$venda == 3][1] * # 110 dias
           total_emissao_co2_eq) # Razão entre fonte_co2 (1,34 a 3,6) e 365 dias

## 1.6.3 Total Animal de CO2 eq economizado ####
fia3 <- fia3 %>%
  mutate(total_econ_co2_eq = 
           dias_economizados * # Dias economizados ao fazer a venda com descasques 1 e 2 (61 e 82 dias)
           total_emissao_co2_eq) # Razão entre fonte_co2 (1,34 a 3,6) e 365 dias --> fazer loop disso!

fia3 %>% 
  select(total_econ_co2_eq) %>% 
  head() 

fia3 %>% 
  summarize(media_total_econ_co2_eq = mean(total_econ_co2_eq, na.rm = TRUE)) %>%
  pull(media_total_econ_co2_eq) # Média de CO2eq Economizado por animal

# - #
fia3 %>% 
  select(total_econ_co2_eq) %>% 
  sum() # Célula Y26 do Excel (Total de CO2eq Economizado)
# 14.37781 (fonte_co2 = 2,1)

fia3 %>% 
  select(total_econ_co2_final) %>% 
  sum() # Célula Y29 do Excel (Total de CO2eq Final)
# 52.52877 (fonte_co2 = 2,1)

fia3 %>% 
  select(peso_sem_descasque) %>% 
  sum() # Célula Z17 do Excel (total do peso sem descasque) 
# 48992.7 (fonte_co2 = 2,1)

fia3 %>% 
  select(total_econ_co2_final) %>% 
  sum() / 
  fia3 %>% 
  select(peso_sem_descasque) %>% 
  sum() *
  1000 # Célula Z29 do Excel (CO2eq economizado por tonelada de carne)


## 1.6.4 CO2 Economizado por kg de Carne Produzida ####
fia3 <- fia3 %>%
  mutate(co2_economizado_kg_carne = 
           total_econ_co2_eq / # - Total Animal de CO2 eq economizado (coluna T do Excel)
           # - Este valor é o produto de dias economizados (dias_economizados, 
           # coluna S do Excel -- com os descasques 1 e 2) razão entre fonte_co2 e 365 dias
           peso_final_kg)

head(fia3)


## 1.6.5 Agua Economizada por kg de Carne Produzida ####
# Um boi consome ~10% de seu peso corporal em água por dia


## 1.6.6 Dejeto por kg de Carne Produzida ####
# Há necessidade, considerando que o impacto se dá em carbono?

## 1.7 Água Economizada ####
fia3 <- fia3 %>%
  mutate(agua_atual_lt = amb3$agua_atual_lt,
         agua_lt_arroba = amb3$agua_lt_arroba)

### 1.10 Visualização fia3 ####
# Data da criação do arquivo
data_atual <- format(Sys.Date(), '%d%m%Y')

# Nome do arquivo
if (escolhido == 1) {
  nome_arquivo <- paste0('fia3_joao_conte_', "fonte_co2", fonte_co2, data_atual, '.xlsx')
} else {
  nome_arquivo <- paste0('fia3_doze_2023_', "fonte_co2", fonte_co2, data_atual, '.xlsx')
}

# nome_arquivo <- paste0('fia3_', analise, '_', data_atual, '.xlsx')

# Visualização baseada na variável 'visual_result_final'
if (visual_result_final) {
  View(fia3) # Abre o dataframe no Viewer do RStudio
} else {
  print(head(fia3)) # Exibe apenas o cabeçalho do dataframe
}

# Exportação baseada na variável 'export_result_final_excel'
if (export_result_final_excel) {
  write.xlsx(fia3, file = nome_arquivo)
  cat('Arquivo exportado com sucesso para:', nome_arquivo, '\n')
}

graphics.off() # Fecha todas as janelas gráficas
