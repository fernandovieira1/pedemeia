# Adicionar as colunas 'escolhido' e 'fonte_co2' ao dataframe original
fia3 <- fia3 %>%
  mutate(
    escolhido = ifelse(row_number() %% 2 == 0, 2, 1),
    fonte_co2 = sample(1:3, n(), replace = TRUE)
  )

# Inicializar lista para armazenar tabelas
tabelas <- list()

# Variáveis de simulação
opcoes_escolhido <- c(1, 2) # Simular escolhas para 'escolhido'
opcoes_fonte_co2 <- c(1, 2, 3) # Simular escolhas para 'fonte_co2'

# Loop para gerar tabelas com combinações de 'escolhido' e 'fonte_co2'
for (escolhido in opcoes_escolhido) {
  for (fonte_co2 in opcoes_fonte_co2) {
    # Filtrar dados com base em 'escolhido' e 'fonte_co2'
    dados_filtrados <- fia3 %>%
      filter(escolhido == !!escolhido, fonte_co2 == !!fonte_co2)
    
    # Verificar se há dados para gerar a tabela
    if (nrow(dados_filtrados) > 0) {
      # Calcular estatísticas de interesse
      tabela <- dados_filtrados %>%
        group_by(venda) %>%
        summarise(
          Media_MS_Sem_Descasque = mean(ms_kg_carne, na.rm = TRUE),
          Media_MS_Com_Descasque = mean(ms_kg_carne_venda_sug, na.rm = TRUE),
          SD_MS_Sem_Descasque = sd(ms_kg_carne, na.rm = TRUE),
          SD_MS_Com_Descasque = sd(ms_kg_carne_venda_sug, na.rm = TRUE),
          n = n()
        ) %>%
        mutate(
          Dataset = ifelse(escolhido == 1, "João Conte", "12 2023"),
          Fonte_CO2 = fonte_co2
        )
      
      # Adicionar tabela à lista
      tabelas <- c(tabelas, list(tabela))
    }
  }
}

# Combinar todas as tabelas em uma única tabela
tabela_final <- bind_rows(tabelas)

# Exibir a tabela final no console
print(tabela_final)

# Opcional: Exportar para um arquivo Excel
# library(openxlsx)
# write.xlsx(tabela_final, "resultado_consumo_ms.xlsx")
# cat("Tabela exportada com sucesso para 'resultado_consumo_ms.xlsx'\n")
