
fia3 <- fia3 %>%
  mutate(
    escolhido = ifelse(row_number() %% 2 == 0, 2, 1) # Alterna valores entre 1 e 2
  )

# Obter os valores únicos reais para o loop de 'escolhido'
opcoes_escolhido <- unique(fia3$escolhido)

# Inicializar lista para armazenar gráficos
graficos <- list()

# Loop para gerar gráficos com base apenas na variável 'escolhido'
for (escolhido in opcoes_escolhido) {
  # Filtrar dados com base no valor atual de 'escolhido'
  dados_filtrados <- fia3 %>%
    filter(escolhido == !!escolhido)
  
  # Verificar se há dados suficientes para o gráfico
  if (nrow(dados_filtrados) > 0) {
    # Criar gráfico com os dados filtrados
    grafico <- ggplot(dados_filtrados, aes(x = as.factor(venda), 
                                           y = consumo_sem_descasque, 
                                           fill = "Controle (Sem Descasque)")) +
      geom_bar(stat = "identity", position = "dodge") +
      geom_bar(aes(y = consumo_COM_descasque, 
                   fill = "Tratamento (Com Descasque)"), 
               stat = "identity", position = "dodge") +
      labs(
        title = paste("Dataset:", ifelse(escolhido == 1, "João Conte", "12 2023")),
        x = NULL,
        y = "Consumo de ms (kg)",
        fill = NULL
      ) +
      scale_x_discrete(labels = c("SG1", "SG2", "SG3")) +
      scale_fill_manual(values = c("Tratamento (Com Descasque)" = "#4DAF4A", 
                                   "Controle (Sem Descasque)" = "#377EB8")) +
      theme_minimal(base_size = 10) + 
      theme(
        legend.position = "bottom",
        legend.text = element_text(size = 12), 
        plot.title = element_text(face = "bold", hjust = 0.5, size = 14),
        axis.text.x = element_text(size = 12), 
        axis.text.y = element_text(size = 12), 
        axis.title.y = element_text(size = 13), 
        axis.title.x = element_text(size = 13)  
      )
    
    # Adicionar gráfico à lista
    graficos <- c(graficos, list(grafico))
  }
}

# Exibir os gráficos em uma única figura (2 colunas)
if (length(graficos) > 0) {
  do.call(grid.arrange, c(graficos, ncol = 2))
} else {
  cat("Nenhum gráfico foi gerado.\n")
}
